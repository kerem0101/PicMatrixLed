

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 08 17:00:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165                           
   166                           	psect	idataCOMMON
   167  075E                     __pidataCOMMON:
   168                           
   169                           ;initializer for _col
   170  075E  3401               	retlw	1
   171  075F  3400               	retlw	0
   172  0760  3402               	retlw	2
   173  0761  3400               	retlw	0
   174  0762  3404               	retlw	4
   175  0763  3400               	retlw	0
   176  0764  3408               	retlw	8
   177  0765  3400               	retlw	0
   178  0766  3410               	retlw	16
   179  0767  3400               	retlw	0
   180                           
   181                           	psect	idataBANK0
   182  0754                     __pidataBANK0:
   183                           
   184                           ;initializer for _row
   185  0754  3403               	retlw	3
   186  0755  3400               	retlw	0
   187  0756  343A               	retlw	58
   188  0757  3400               	retlw	0
   189  0758  343B               	retlw	59
   190  0759  3400               	retlw	0
   191  075A  343A               	retlw	58
   192  075B  3400               	retlw	0
   193  075C  3403               	retlw	3
   194  075D  3400               	retlw	0
   195  0006                     _PORTB	set	6
   196  0007                     _PORTC	set	7
   197  0087                     _TRISC	set	135
   198  0086                     _TRISB	set	134
   199                           
   200                           	psect	cinit
   201  07B2                     start_initialization:	
   202                           ; #config settings
   203                           
   204  07B2                     __initialization:
   205                           
   206                           ; Initialize objects allocated to BANK0
   207  07B2  1383               	bcf	3,7	;select IRP bank0
   208  07B3  302A               	movlw	low (__pdataBANK0+10)
   209  07B4  00FD               	movwf	btemp+-1
   210  07B5  3007               	movlw	high __pidataBANK0
   211  07B6  00FE               	movwf	btemp
   212  07B7  3054               	movlw	low __pidataBANK0
   213  07B8  00FF               	movwf	btemp+1
   214  07B9  3020               	movlw	low __pdataBANK0
   215  07BA  0084               	movwf	4
   216  07BB  120A  118A  276C  120A  118A  	fcall	init_ram0
   217                           
   218                           ; Initialize objects allocated to COMMON
   219  07C0  120A  118A  275E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   220  07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   221  07C6  120A  118A  275F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   222  07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   223  07CC  120A  118A  2760  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   224  07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   225  07D2  120A  118A  2761  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   226  07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   227  07D8  120A  118A  2762  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   228  07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   229  07DE  120A  118A  2763  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   230  07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   231  07E4  120A  118A  2764  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   232  07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   233  07EA  120A  118A  2765  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   234  07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   235  07F0  120A  118A  2766  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   236  07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   237  07F6  120A  118A  2767  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   238  07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2F7B   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	dataCOMMON
   247  0070                     __pdataCOMMON:
   248  0070                     _col:
   249  0070                     	ds	10
   250                           
   251                           	psect	dataBANK0
   252  0020                     __pdataBANK0:
   253  0020                     _row:
   254  0020                     	ds	10
   255                           
   256                           	psect	inittext
   257  0768                     init_fetch0:	
   258                           ;	Called with low address in FSR and high address in W
   259                           
   260  0768  087E               	movf	btemp,w
   261  0769  008A               	movwf	10
   262  076A  087F               	movf	btemp+1,w
   263  076B  0082               	movwf	2
   264  076C                     init_ram0:	
   265                           ;Called with:
   266                           ;	high address of idata address in btemp 
   267                           ;	low address of idata address in btemp+1 
   268                           ;	low address of data in FSR
   269                           ;	high address + 1 of data in btemp-1
   270                           
   271  076C  120A  118A  2768  120A  118A  	fcall	init_fetch0
   272  0771  0080               	movwf	0
   273  0772  0A84               	incf	4,f
   274  0773  0804               	movf	4,w
   275  0774  067D               	xorwf	btemp+-1,w
   276  0775  1903               	btfsc	3,2
   277  0776  3400               	retlw	0
   278  0777  0AFF               	incf	btemp+1,f
   279  0778  1903               	btfsc	3,2
   280  0779  0AFE               	incf	btemp,f
   281  077A  2F6C               	goto	init_ram0
   282                           
   283                           	psect	cstackCOMMON
   284  007A                     __pcstackCOMMON:
   285  007A                     ?_main:
   286  007A                     ??_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 1 bytes @ 0x0
   291  007A                     	ds	2
   292  007C                     main@i:
   293                           
   294                           ; 2 bytes @ 0x2
   295  007C                     	ds	2
   296                           
   297                           	psect	maintext
   298  077B                     __pmaintext:	
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 28 in file "newmain.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  i               2    2[COMMON] int 
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         2       0       0       0       0
   320 ;;      Temps:          2       0       0       0       0
   321 ;;      Totals:         4       0       0       0       0
   322 ;;Total ram usage:        4 bytes
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _main
   332  077B                     _main:
   333  077B                     l630:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   336                           
   337                           
   338                           ;newmain.c: 30:     TRISB = 0;
   339  077B  1683               	bsf	3,5	;RP0=1, select bank1
   340  077C  1303               	bcf	3,6	;RP1=0, select bank1
   341  077D  0186               	clrf	6	;volatile
   342                           
   343                           ;newmain.c: 31:     TRISC = 0;
   344  077E  0187               	clrf	7	;volatile
   345  077F                     l19:	
   346                           ;newmain.c: 33:     while (1) {
   347                           
   348                           
   349                           ;newmain.c: 35:         for (int i = 0; i < 5; i++) {
   350  077F  01FC               	clrf	main@i
   351  0780  01FD               	clrf	main@i+1
   352  0781                     l636:
   353                           
   354                           ;newmain.c: 37:             PORTC = col[i];
   355  0781  087C               	movf	main@i,w
   356  0782  00FA               	movwf	??_main
   357  0783  077A               	addwf	??_main,w
   358  0784  3E70               	addlw	(low (_col| 0))& (0+255)
   359  0785  0084               	movwf	4
   360  0786  0800               	movf	0,w
   361  0787  1283               	bcf	3,5	;RP0=0, select bank0
   362  0788  1303               	bcf	3,6	;RP1=0, select bank0
   363  0789  0087               	movwf	7	;volatile
   364                           
   365                           ;newmain.c: 38:             PORTB = row[i];
   366  078A  087C               	movf	main@i,w
   367  078B  00FA               	movwf	??_main
   368  078C  077A               	addwf	??_main,w
   369  078D  3E20               	addlw	(low (_row| 0))& (0+255)
   370  078E  0084               	movwf	4
   371  078F  1383               	bcf	3,7	;select IRP bank0
   372  0790  0800               	movf	0,w
   373  0791  0086               	movwf	6	;volatile
   374  0792                     l638:
   375                           
   376                           ;newmain.c: 39:             _delay((unsigned long)((10)*(4000000/4000.0)));
   377  0792  300D               	movlw	13
   378  0793  00FB               	movwf	??_main+1
   379  0794  30FB               	movlw	251
   380  0795  00FA               	movwf	??_main
   381  0796                     u37:
   382  0796  0BFA               	decfsz	??_main,f
   383  0797  2F96               	goto	u37
   384  0798  0BFB               	decfsz	??_main+1,f
   385  0799  2F96               	goto	u37
   386  079A  2F9B               	nop2
   387  079B                     l640:
   388                           
   389                           ;newmain.c: 40:         }
   390  079B  3001               	movlw	1
   391  079C  07FC               	addwf	main@i,f
   392  079D  1803               	skipnc
   393  079E  0AFD               	incf	main@i+1,f
   394  079F  3000               	movlw	0
   395  07A0  07FD               	addwf	main@i+1,f
   396  07A1                     l642:
   397  07A1  087D               	movf	main@i+1,w
   398  07A2  3A80               	xorlw	128
   399  07A3  00FF               	movwf	btemp+1
   400  07A4  3080               	movlw	128
   401  07A5  027F               	subwf	btemp+1,w
   402  07A6  1D03               	skipz
   403  07A7  2FAA               	goto	u25
   404  07A8  3005               	movlw	5
   405  07A9  027C               	subwf	main@i,w
   406  07AA                     u25:
   407  07AA  1C03               	skipc
   408  07AB  2FAD               	goto	u21
   409  07AC  2FAE               	goto	u20
   410  07AD                     u21:
   411  07AD  2F81               	goto	l636
   412  07AE                     u20:
   413  07AE  2F7F               	goto	l19
   414  07AF  120A  118A  2800   	ljmp	start
   415  07B2                     __end_of_main:
   416  007E                     btemp	set	126	;btemp
   417  007E                     wtemp0	set	126
   418                           
   419                           	psect	config
   420                           
   421                           ;Config register CONFIG @ 0x2007
   422                           ;	Oscillator Selection bits
   423                           ;	FOSC = EXTRC, RC oscillator
   424                           ;	Watchdog Timer Enable bit
   425                           ;	WDTE = OFF, WDT disabled
   426                           ;	Power-up Timer Enable bit
   427                           ;	PWRTE = OFF, PWRT disabled
   428                           ;	FLASH Program Memory Code Protection bits
   429                           ;	CP = OFF, Code protection off
   430                           ;	Brown-out Reset Enable bit
   431                           ;	BOREN = ON, BOR enabled
   432                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   433                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   434                           ;	Data EE Memory Code Protection
   435                           ;	CPD = OFF, Code Protection off
   436                           ;	FLASH Program Memory Write Enable
   437                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
   438                           ;	In-Circuit Debugger Mode bit
   439                           ;	DEBUG = 0x1, unprogrammed default
   440  2007                     	org	8199
   441  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 08 17:00:30 2021

                      pc 0002                       l19 077F                       u20 07AE  
                     u21 07AD                       u25 07AA                       u37 0796  
                     fsr 0004                      l630 077B                      l640 079B  
                    l642 07A1                      l636 0781                      l638 0792  
                    _col 0070                      fsr0 0004                      _row 0020  
                    indf 0000                     _main 077B                     btemp 007E  
                   start 0000                    ?_main 007A                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  main@i 007C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07B2             __end_of_main 07B2  
                 ??_main 007A             __pdataCOMMON 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 007A             __pidataBANK0 0754               __pmaintext 077B  
   end_of_initialization 07FC            __pidataCOMMON 075E      start_initialization 07B2  
             init_fetch0 0768              __pdataBANK0 0020                ___latbits 0002  
          __size_of_main 0037                 init_ram0 076C  
